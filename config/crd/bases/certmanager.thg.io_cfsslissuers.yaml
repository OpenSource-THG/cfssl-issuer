
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: cfsslissuers.certmanager.thg.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.url
    name: URL
    priority: 1
    type: string
  - JSONPath: .spec.profile
    name: Profile
    priority: 1
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: certmanager.thg.io
  names:
    kind: CfsslIssuer
    listKind: CfsslIssuerList
    plural: cfsslissuers
    singular: cfsslissuer
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CfsslIssuer is the Schema for the cfsslissuers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CfsslIssuerSpec defines the desired state of CfsslIssuer
          properties:
            caBundle:
              description: CABundle is a base64 encoded TLS certificate used to verify
                connections to the step certificates server. If not set the system
                root certificates are used to validate the TLS connection.
              format: byte
              type: string
            profile:
              description: Profile is signing profile used by the Cfssl Server. If
                omitted, the default profile will be used
              type: string
            url:
              description: URL is an url of a Cfssl Server
              type: string
          required:
          - caBundle
          - url
          type: object
        status:
          description: CfsslIssuerStatus defines the observed state of CfsslIssuer
          properties:
            conditions:
              items:
                description: CfsslIssuerCondition contains condition information for
                  the cfssl issuer.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the timestamp corresponding
                      to the last status change of this condition.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable description of the details
                      of the last transition, complementing reason.
                    type: string
                  reason:
                    description: Reason is a brief machine readable explanation for
                      the condition's last transition.
                    type: string
                  status:
                    allOf:
                    - enum:
                      - "True"
                      - "False"
                      - Unknown
                    - enum:
                      - "True"
                      - "False"
                      - Unknown
                    description: Status of the condition, one of ('True', 'False',
                      'Unknown').
                    type: string
                  type:
                    description: Type of the condition, currently ('Ready').
                    enum:
                    - Ready
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
